This patch adds a `DefinePropertyOverride` member to the
`ProvidedTypeDefinition` type. When a provided type implements an
interface, this allows properties in the interface to be implemented.

---

--- a/src/ProvidedTypes.fs
+++ b/src/ProvidedTypes.fs
@@ -1173,7 +1173,7 @@ namespace ProviderImplementation.ProvidedTypes
     new (propertyName, propertyType, ?getterCode, ?setterCode, ?isStatic, ?indexParameters) =
         let isStatic = defaultArg isStatic false
         let indexParameters = defaultArg indexParameters []
-        let pattrs = (if isStatic then MethodAttributes.Static else enum<MethodAttributes>(0)) ||| MethodAttributes.Public ||| MethodAttributes.SpecialName
+        let pattrs = (if isStatic then MethodAttributes.Static else MethodAttributes.Virtual) ||| MethodAttributes.Public ||| MethodAttributes.SpecialName
         let getter = getterCode |> Option.map (fun _ -> ProvidedMethod(false, "get_" + propertyName, pattrs, Array.ofList indexParameters, propertyType, getterCode, [], None, K [| |]) :> MethodInfo)
         let setter = setterCode |> Option.map (fun _ -> ProvidedMethod(false, "set_" + propertyName, pattrs, [| yield! indexParameters; yield ProvidedParameter(false, "value", propertyType, isOut=Some false, optionalValue=None) |], typeof<Void>, setterCode, [], None, K [| |]) :> MethodInfo)
         ProvidedProperty(false, propertyName, PropertyAttributes.None, propertyType, isStatic, Option.map K getter, Option.map K setter, Array.ofList indexParameters, K [| |])
@@ -1867,6 +1867,21 @@ namespace ProviderImplementation.ProvidedTypes
     member __.DefineMethodOverride (methodInfoBody, methodInfoDeclaration) = methodOverrides.Add (methodInfoBody, methodInfoDeclaration)
     member __.DefineMethodOverridesDelayed f = methodOverridesQueue.Add (f >> Array.ofList)
 
+    member __.DefinePropertyOverride ((propertyInfoBody : ProvidedProperty), (propertyInfoDeclaration : PropertyInfo)) =
+        if propertyInfoBody.PropertyType <> propertyInfoDeclaration.PropertyType then
+            failwithf "ProvidedProperty %s does not have the same type as the target property"
+                propertyInfoBody.Name
+        match propertyInfoBody.Getter, propertyInfoDeclaration.GetGetMethod() with
+        | None, _ | _, null -> ()
+        | Some x, targetGetter ->
+            let getter = x() :?> ProvidedMethod
+            methodOverrides.Add (getter, targetGetter)
+        match propertyInfoBody.Setter, propertyInfoDeclaration.GetSetMethod() with
+        | None, _ | _, null -> ()
+        | Some x, targetSetter ->
+            let setter = x() :?> ProvidedMethod
+            methodOverrides.Add (setter, targetSetter)
+
     // This method is used by Debug.fs and QuotationBuilder.fs.
     // Emulate the F# type provider type erasure mechanism to get the
     // actual (erased) type. We erase ProvidedTypes to their base type
--- a/src/ProvidedTypes.fsi
+++ b/src/ProvidedTypes.fsi
@@ -286,6 +286,8 @@ type ProvidedTypeDefinition =
     /// Specifies that the given method bodies implement the given method declarations
     member DefineMethodOverridesDelayed: (unit -> (ProvidedMethod * MethodInfo) list) -> unit

+       member DefinePropertyOverride: propertyInfoBody: ProvidedProperty * propertyInfoDeclaration: PropertyInfo -> unit
+
     /// Add a 'Obsolete' attribute to this provided type definition
     member AddObsoleteAttribute: message: string * ?isError: bool -> unit
